# DO NOT EDIT THIS FILE
#
# Please edit /boot/uEnv.txt to set supported parameters
#

# default values
setenv load_addr "0x45000000"
setenv rootdev "/dev/mmcblk1p1"
setenv verbosity "1"
setenv rootfstype "ext4"
setenv console "both"
setenv docker_optimizations "off"
setenv bootlogo "false"
setenv debug_uart "ttyAS0"

# Print boot source
itest.b *0x10028 == 0x00 && echo "U-boot loaded from SD"
itest.b *0x10028 == 0x02 && echo "U-boot loaded from eMMC or secondary SD"
itest.b *0x10028 == 0x03 && echo "U-boot loaded from SPI"

echo "Boot script loaded from ${devtype}"

if test -e ${devtype} ${devnum} ${prefix}autoEnv; then
	echo "load and import env from ${devtype} ${devnum} ${load_addr} ${prefix}autoEnv"
	load ${devtype} ${devnum} ${load_addr} ${prefix}autoEnv
	env import -t ${load_addr} ${filesize}
fi

if test -e ${devtype} ${devnum} ${prefix}uEnv.txt; then
    echo "load and import env from ${devtype} ${devnum} ${load_addr} ${prefix}uEnv.txt"
	load ${devtype} ${devnum} ${load_addr} ${prefix}uEnv.txt
	env import -t ${load_addr} ${filesize}
fi

if test "${console}" = "display" || test "${console}" = "both"; then setenv consoleargs "console=${debug_uart},115200 console=tty1"; fi
if test "${console}" = "serial"; then setenv consoleargs "console=${debug_uart},115200"; fi
if test "${bootlogo}" = "true"; then
	setenv consoleargs "splash plymouth.ignore-serial-consoles ${consoleargs}"
else
	setenv consoleargs "splash=verbose ${consoleargs}"
fi

# get PARTUUID of first partition on SD/eMMC it was loaded from
# mmc 0 is always mapped to device u-boot (2016.09+) was loaded from
if test "${devtype}" = "mmc"; then part uuid mmc 0:1 partuuid; fi

setenv bootargs "root=${rootdev} rootwait rootfstype=${rootfstype} ${consoleargs} consoleblank=0 loglevel=${verbosity} ubootpart=${partuuid} disp_reserve=${disp_reserve} ${extraargs} ${extraboardargs}"

if test "${docker_optimizations}" = "on"; then setenv bootargs "${bootargs} cgroup_enable=memory swapaccount=1"; fi

printenv bootargs

#load ${devtype} ${devnum} ${fdt_addr_r} ${prefix}dtb/${fdtfile}
#fdt addr -c ${fdt_addr_r}
#fdt addr ${fdt_addr_r}
#fdt resize 65536

fdt set disp boot_fb0 ${boot_fb0}
fdt set disp boot_disp <${boot_disp}>
fdt set disp boot_disp1 <${boot_disp1}>
fdt set disp boot_disp2 <${boot_disp2}>
fdt set disp tv_vdid <${tv_vdid}>

fdt set /soc/disp fb0_width <${fb0_width}>
fdt set /soc/disp fb0_height <${fb0_height}>

## test mode：delete “#” before fdt and add "tx-delay=" "rx-delay=" in uEnv.txt
## tx-delay= 0 ~ 7, rx-delay= 0 ~ 31
#fdt set gmac0 tx-delay <${tx-delay}>
#fdt set gmac0 rx-delay <${rx-delay}>

for overlay_file in ${overlays}; do
	if load ${devtype} ${devnum} ${load_addr} ${prefix}dtb/sunxi/overlay/${overlay_file}; then
		echo "Applying kernel provided DT overlay ${overlay_file}"
		fdt apply ${load_addr} || setenv overlay_error "true"
	fi
done

echo "load ${devtype} ${devnum} ${ramdisk_addr_r} ${prefix}uInitrd"
load ${devtype} ${devnum} ${ramdisk_addr_r} ${prefix}uInitrd

echo "load ${devtype} ${devnum} ${kernel_addr_r} ${prefix}vmlinuz-${uname_r}"
load ${devtype} ${devnum} ${kernel_addr_r} ${prefix}vmlinuz-${uname_r}

echo "bootm ${kernel_addr_r} ${ramdisk_addr_r} ${fdt_addr_r}"
bootm ${kernel_addr_r} ${ramdisk_addr_r} ${fdt_addr_r}

# Recompile with:
# mkimage -C none -A arm -T script -d /boot/boot.cmd /boot/boot.scr
